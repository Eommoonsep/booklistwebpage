--------------------------------
방명록 v2.0 (웹 버전, Servlet MVC Pattern)


- 방명록 입력, 방명록 전체 출력, 방명록 검색(글쓴이, 글내용, 작성일, 글쓴이+글내용  선택 가능), 방명록 삭제(패스워드 검사), 관리자 로그인, 관리자 기능(사진 관리, 방명록 관리)
- 항목 결정->  글번호, 글쓴이, 패스워드, 글내용, 등록일(yyyy-MM-dd), 클라이언트IP, 사진 정보 멤버 ->자료형 클래스
- 항목 결정->  로그인 정보 저장용 자료형 클래스 생성
- 화면 설계



- 작성 순서
1) 화면 설계에 따른 HTML 페이지 작성 -> HTML, CSS, Bootstrap, jQuery
2) 데이터베이스에서 테이블 및 초기 자료 준비
3) 화면설계에 따른 쿼리 준비 -> INSERT, SELECT
4) 자료형 클래스 선언
5) DAO 클래스 선언 및 저장소 준비, 초기 자료 준비
6) DAO 클래스 전체 출력 메소드 작성
7) Test 클래스에서 전체 출력 메소드 테스트
8) 전체 출력 메소드 연결 -> JSP 페이지
9) 입력 기능
10) 검색 기능
11) 삭제(패스워드 검사) 기능
12) 관리자 로그인 기능
13) 관리자 사진 관리 기능
14) 관리자 방명록 관리 기능 추가
15) 구글 맵 OPEN API 설정 추가
16) 관리자 사진 삭제 기능 추가

------------------------------------------------------
--글번호, 글쓴이, 패스워드, 글내용, 등록일(yyyy-MM-dd), 클라이언트IP 항목으로 구성된 테이블 생성
CREATE TABLE guestbook (
	gid NUMBER  --PK
	, name_ NVARCHAR2(20)
	, pw VARCHAR2(20)
	, content_ NVARCHAR2(500)
	, regDate DATE  --(기본값 설정)
	, clientIP VARCHAR2(15) --IPv4 형식(XXX.XXX.XXX.XXX)
);


--PK 제약 조건 추가
ALTER TABLE guestbook
	ADD CONSTRAINT guestbook_gid_pk PRIMARY KEY(gid);

--나머지 제약 추가는 선택적으로 실행

--샘플 자료 준비
INSERT INTO guestbook(gid, name_, pw, content_, regDate, clientIP) VALUES ((SELECT NVL(MAX(gid), 0) + 1 AS newNum FROM guestbook), '홍길동', '1234', '테스트1', '2017-05-10', '211.63.89.68');
INSERT INTO guestbook(gid, name_, pw, content_, regDate, clientIP)
	VALUES ((SELECT NVL(MAX(gid), 0) + 1 AS newNum FROM guestbook), '박길동', '1234', '테스트2', SYSDATE, '211.63.89.72');
COMMIT;

--샘플 자료 확인 및 전체 출력 쿼리
-->주의) 날짜 관련 자료는 TO_CHAR() 함수 적용할 것
SELECT gid, name_, content_
	, TO_CHAR(regDate , 'YYYY-MM-DD') AS regDate
	, clientIP
	FROM guestbook ORDER BY gid;



--글쓴이, 글내용, 등록일 기준 검색 쿼리. 부분 검색 가능하도록 작성.
SELECT gid, name_, content_
	, TO_CHAR(regDate , 'YYYY-MM-DD') AS regDate
	, clientIP
	FROM guestbook
	WHERE INSTR(name_, '홍') > 0 --부분 검색 가능
	ORDER BY gid;


--삭제 쿼리
DELETE FROM guestbook WHERE gid='글번호' AND pw='패스워드';
COMMIT;


---------------------------------------
--로그인/로그아웃 액션 처리를 위한 테이블 생성

--ID, PW 항목으로 구성된 테이블 생성
CREATE TABLE guestbooklogin (
	id_ VARCHAR2(20) --PK
	, pw VARCHAR2(20)
	, grade NUMBER(1)
);

ALTER TABLE guestbooklogin
	ADD CONSTRAINT guestbooklogin_id_pk PRIMARY KEY(id_);

--관리자 아이디, 패스워드 등록
INSERT INTO guestbooklogin (id_, pw, grade) VALUES ('admin', '1234', 0);
COMMIT;



------------------------------
--사진 관리를 위한 테이블 생성
CREATE TABLE picturelist (
	pid NUMBER --PK
	,pic_filename VARCHAR2(25) --사진 파일명(영문 파일명)
	,caption_ NVARCHAR2(50) --사진 설명
);

ALTER TABLE picturelist 
	ADD CONSTRAINT picturelist_pid_pk PRIMARY KEY(pid);

INSERT INTO picturelist (pid, pic_filename, caption_)
	VALUES ((SELECT NVL(MAX(pid), 0) + 1 AS newNum FROM picturelist), 'chicago.jpg', '시카고 공연');
INSERT INTO picturelist (pid, pic_filename, caption_)
	VALUES ((SELECT NVL(MAX(pid), 0) + 1 AS newNum FROM picturelist), 'la.jpg', 'LA 공연');
INSERT INTO picturelist (pid, pic_filename, caption_)
	VALUES ((SELECT NVL(MAX(pid), 0) + 1 AS newNum FROM picturelist), 'ny.jpg', '뉴욕 공연');
COMMIT;
--주의) WebContent>picture 폴더 하위에 데이터베이스 목록에 있는 사진 파일이 복사되어 있어야 한다.


--사진 출력 쿼리
SELECT pid, pic_filename, caption_ FROM picturelist;



----------------------------------------------------------
--관리자 방명록 관리(블라인드 기능)를 위한 guestbook 테이블 수정
--blind 컬럼 추가. on/off(default) 저장.
ALTER TABLE guestbook
	ADD (blind NUMBER(1) DEFAULT 0); --O off, 1 on



--주의) 일반 사용자는 블라인드 처리된 게시물을 볼 수 없다.
--전용 뷰 생성. 사용자용 뷰, 관리자용 뷰.
--게시물 카운트(totalcount), 검색 카운트(count)에도 사용한다.

CREATE OR REPLACE VIEW userGuestbookView
AS
SELECT gid, name_, content_
	, regDate
	, clientIP
	FROM guestbook 
	WHERE blind = 0;

SELECT gid, name_, content_
	, TO_CHAR(regDate , 'YYYY-MM-DD') AS regDate
	, clientIP
	FROM userGuestbookView 
	ORDER BY gid;


CREATE OR REPLACE VIEW adminGuestbookView
AS
SELECT gid, name_, content_
	, regDate
	, clientIP
	, blind
	FROM guestbook;

SELECT gid, name_, content_
	, TO_CHAR(regDate , 'YYYY-MM-DD') AS regDate
	, clientIP
	, blind
	FROM adminGuestbookView 
	ORDER BY gid;


--특정 게시물에 대한 블라인드 처리
UPDATE guestbook SET blind=블라인드값 WHERE gid=글번호;
COMMIT;



------------------------------------------------------------
프로그램 구성
1. AdminServiceClass.java
2. ControllerServlet.java
3. DBConnection.java
4. Guestbook.java
5. GuestbookDAO.java
6. GuestbookServiceClass.java
7. LoginDAO.java
8. LoginInfo.java
9. LoginServiceClass.java
10. MyFileRenamePolicy.java
11. web.xml
12. adminbooklist.jsp
13. adminpicturefail.jsp
14. adminpicturelist.jsp
15. guestbooklist.jsp
16. loginfail.jsp
17. logoutform.jsp
18. redirect.jsp



----------------------------------------------------------
라이브러리 구성 (WebContent>WEB-INF>lib)
1. cos.jar
2. gson-2.8.1.jar
3. jstl-1.2.jar
4. ojdbc6.jar


---------------------------------------------------------
이미지 리소스 구성
1. sist_logo.png (WebContent>img)
2. chicago.jpg (WebContent>picture)
3. la.jpg (WebContent>picture)
4. ny.jpg (WebContent>picture)



-----------------------------------
//guestbooklist.jsp(화면설계 소스코드)
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>	
<%-- Servlet MVC Pattern 에서 JSP 페이지 작성시 뷰 역할만 하기 때문에 액션 관련 코드는 모두 제거한다 --%>
<%-- 현재 페이지(*.jsp)를 직접 실행하지 않는다 --%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>GuestBook v2.0</title>

<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet"
	href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">

<!-- 외부 스크립트 파일 연결 -> 주의) 연결 순서 중요 -->
<script src="${pageContext.request.contextPath}/script/util.js"></script>

<script src="http://maps.googleapis.com/maps/api/js"></script>

<script
	src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script
	src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>

<style>

div.panel {
	box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0
		rgba(0, 0, 0, 0.19);
}

</style>

<script>
$(document).ready(function() {
	
	//------------------------------------
	//구글 맵 버튼에 대한 이벤트 등록
	$(".btnMap").click(function() {
		//모달 창 호출 액션
		$("#mapModal").modal();
	});
	//모달 창이 화면에 나타나면 myMap() 함수 호출
	$("#mapModal").on('shown.bs.modal', function() {
		myMap();
	});
	//모달 창이 화면에서 사라질때 기존의 영역에 출력된 지도 정보 삭제
	$("#mapModal").on('hidden.bs.modal', function() {
		$("#googleMap").empty();
	});
	//------------------------------------


	//------------------------------------
	//남은 날짜 표시
	$("#day").text("(D-" + remainderOfDays("2017-10-27") + ")");
	//------------------------------------

	
	//------------------------------------
	//글쓰기 성공(100), 실패 메시지(101) 반환
	if ("${code}" == "100") {
		$(".insert-success").css("display", "inline");
	} else if ("${code}" == "101") {
		$(".insert-fail").css("display", "inline");
	} 
	//------------------------------------

	
	//------------------------------------
	//검색 진행후 검색 key, value를 유지하는 과정 추가
	var key = "${key}";
	var value = "${value}";
	$("select#key > option[value='"+key+"']").attr("selected", "selected");
	$("input#value").val(value);
	//------------------------------------
	
	
	//------------------------------------
	//삭제 기능 추가를 위한 버튼 이벤트 등록
	$(".btnDelete").on("click", function() {
		
		//삭제 버튼 클릭시 버튼이 속한 <tr> 태그에 배경색 지정
		$(this).parents("tr").css("background-color", "#F5F5F5");
		
		//삭제 버튼 클릭시 특정 hidden 태그에 글번호 지정
		$("input#gid").val($(this).val());
		
	});
	//------------------------------------


	//------------------------------------
	//패스워드 입력 폼 팝업이 닫히는 경우 배경색 지정 취소
	$("#deleteFormModal").on('hidden.bs.modal', function () {
        $("table#boardTable tr").css("background-color", "");
	});
	//------------------------------------
	
	
	//------------------------------------
	//글삭제 성공(200), 실패 메시지(201) 반환
	if ("${code}" == "200") {
		$(".delete-success").css("display", "inline");
	} else if ("${code}" == "201") {
		$(".delete-fail").css("display", "inline");
	} 
	//------------------------------------

	
	
});
</script>


<script>

	var position01 = new google.maps.LatLng(37.500197, 127.033471);
	var position02 = new google.maps.LatLng(37.499362, 127.033202);

	function myMap() {

		//구글 맵 정보 설정
		var mapProp = {
			center : position01,
			zoom : 17,
			mapTypeId : google.maps.MapTypeId.ROADMAP
		};
		var map = new google.maps.Map(document.getElementById("googleMap"),
				mapProp);

		//마커 정보 설정
		var marker = new google.maps.Marker({
			position : position02,
		});
		marker.setMap(map);

		//윈포윈도우 설정
		var infowindow = new google.maps.InfoWindow(
				{
					content : "한독약품빌딩<br>서울특별시 강남구 역삼1동 735<br><img src=\"${pageContext.request.contextPath}/img/handok_small.png\">"
				});
		google.maps.event.addListener(marker, 'click', function() {
			infowindow.open(map, marker);
		});

	}
</script>



</head>
<body>

	<div class="container">

		<div>
			<h1 style="font-size: x-large;">
				<!-- 로고 이미지를 클릭하면 HOME 화면으로 이동하도록 설정 -->
				<a href="${pageContext.request.contextPath}/guestbooklist.do"><img src="${pageContext.request.contextPath}/img/sist_logo.png" alt="sist_logo.png" style="vertical-align: bottom;"></a> 방명록 <small>[v2.0 MVC Pattern] Java&amp;Python개발자
					과정 2017.03.31 ~ 2017.10.27 <span style="color: red;" id="day">(D-0)</span>
				</small>
			</h1>
		</div>

		<div class="panel-group">
			<div class="panel panel-default">
				<div class="panel-heading">
					서울특별시 강남구 역삼1동 735 한독약품빌딩 8층 쌍용교육센터 2강의실, 지하철 2호선 역삼역 3번 출구
					<button type="button" class="btn btn-default btn-xs btnMap"
						id="map">Map</button>
					<button type="button" class="btn btn-default btn-xs" id="admin" data-toggle="modal" data-target="#loginFormModal">Admin</button>
				</div>
			</div>

			<div class="panel panel-default">
				<div class="panel-heading">Picture List</div>
				<div class="panel-body">

					<!-- data-ride="carousel" 속성 지정시 슬라이드가 자동 시작된다. -->
					<div id="myCarousel" class="carousel slide" >

						<ol class="carousel-indicators">
							
						 
							<li data-target="#myCarousel" data-slide-to="0" class="active"></li>
							<li data-target="#myCarousel" data-slide-to="1"></li>
							<li data-target="#myCarousel" data-slide-to="2"></li>
						
							
						</ol>

						<!-- Wrapper for slides -->
						<div class="carousel-inner" role="listbox">
							
							
							<div class="item active">
								<img src="${pageContext.request.contextPath}/picture/chicago.jpg"
									alt="chicago.jpg" style="width:100%;">
									
								<!-- 간단한 사진 설명을 캡션으로 추가 가능 -->	
								<div class="carousel-caption">
									<h3>시카고 공연</h3>
								</div>

							</div>

							<div class="item">
								<img src="${pageContext.request.contextPath}/picture/la.jpg" alt="la.jpg" style="width:100%;">
								<div class="carousel-caption">
									<h3>LA 공연</h3>
								</div>
							</div>

							<div class="item">
								<img src="${pageContext.request.contextPath}/picture/ny.jpg" alt="ny.jpg" style="width:100%;">
								<div class="carousel-caption">
									<h3>뉴욕 공연</h3>
								</div>
							</div>
 						

 							
						</div>

						<!-- Left and right controls -->
						<a class="left carousel-control" href="#myCarousel" role="button"
							data-slide="prev"> <span
							class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
							<span class="sr-only">Previous</span>
						</a> <a class="right carousel-control" href="#myCarousel"
							role="button" data-slide="next"> <span
							class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
							<span class="sr-only">Next</span>
						</a>
					</div>


					<p>Note: Carousels are not supported properly in Internet
						Explorer 9 and earlier.</p>



				</div>
			</div>

			<div class="panel panel-default">
				<div class="panel-heading">방명록 글쓰기</div>
				<div class="panel-body" id="demo">

					<form role="form" action="${pageContext.request.contextPath}/guestbookinsert.do" method="post">
						<div class="form-group">
							<input type="text" class="form-control" id="name_" name="name_"
								placeholder="NAME (20자 이내)" maxlength="20" required="required">
						</div>
						<div class="form-group">
							<input type="password" class="form-control" id="pw" name="pw"
								placeholder="PASSWORD (20자 이내)" maxlength="20"
								required="required">
						</div>
						<div class="form-group">
							<input type="text" class="form-control" id="content_"
								name="content_" placeholder="CONTENT (500자 이내)" maxlength="500"
								required="required">
						</div>
						<button type="submit" class="btn btn-default">Submit</button>
						<span class="alert alert-success insert-success"
							style="padding: 8px; display: none;"> <strong>Success!</strong>
							방명록 글쓰기가 성공했습니다.
						</span> <span class="alert alert-danger insert-fail"
							style="padding: 8px; display: none;"> <strong>Fail!</strong>
							방명록 글쓰기가 실패했습니다.
						</span>
					</form>

				</div>
			</div>
			<div class="panel panel-default">
				<div class="panel-heading">방명록 글목록</div>
				<div class="panel-body">

					<table class="table" id="boardTable">
						<thead>
							<tr>
								<th>번호</th>
								<th>글쓴이</th>
								<th>글내용</th>
								<th>작성일</th>
								<th>삭제</th>
							</tr>
						</thead>
						<tbody>
							
							<tr>
								<td>1</td>
								<td>관리자</td>
								<td>JSP 과정 진행 중입니다. 프로젝트 발표 사진도 올릴 예정입니다.</td>
								<td>2017-08-17</td>
								<td><button type="button" class="btn btn-default btn-xs">삭제</button></td>
							</tr>
							
							
						</tbody>
					</table>

					<!-- action="" 속성 생략시 자기 자신에게 전송 -->
					<form   method="post" class="form-inline">

						<div class="form-group">
							<button type="button" class="btn btn-default btn-sm">
								TotalCount <span class="badge" id="totalCount">${totalcount}</span>
							</button>
						</div>


						<div class="form-group">
							<button type="button" class="btn btn-default btn-sm">
								Count <span class="badge" id="count">${count}</span>
							</button>
						</div>

						<div class="form-group">
							<select class="form-control" name="key" id="key">
								<option value="name_">글쓴이</option>
								<option value="content_">글내용</option>
								<option value="regDate">작성일</option>
								<option value="name_content_">글쓴이+글내용</option>
							</select>
						</div>

						<div class="form-group">
							<input type="text" class="form-control" id="value" name="value">
						</div>

						<button type="submit" class="btn btn-default">Search</button>
						
						<!-- 삭제 결과 메시지 출력 부분 추가 -->
						<span class="alert alert-success delete-success"
							style="padding: 8px; display: none;"> <strong>Success!</strong>
							방명록 글삭제가 성공했습니다.
						</span> <span class="alert alert-danger delete-fail"
							style="padding: 8px; display: none;"> <strong>Fail!</strong>
							방명록 글삭제가 실패했습니다.
						</span>
						
					</form>

				</div>
			</div>
		</div>

	</div>


	<!-- Google Map Modal -->
	<div id="mapModal" class="modal fade" role="dialog">
		<div class="modal-dialog">

			<!-- Modal content-->
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal">&times;</button>
					<h4 class="modal-title">Google Map</h4>
				</div>
				<div class="modal-body">

					<div id="googleMap"
						style="width: 550px; height: 380px; margin: auto;"></div>

				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default btn-sm"
						data-dismiss="modal">Close</button>
				</div>
			</div>

		</div>
	</div>


	<!-- Login Form Modal -->
	<div id="loginFormModal" class="modal fade" role="dialog">
		<div class="modal-dialog">

			<!-- Modal content-->
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal">&times;</button>
					<h4 class="modal-title">Admin Login</h4>
				</div>
				<div class="modal-body">

					<form action="${pageContext.request.contextPath}/login.do" method="post">

						<div class="form-group">
							<input type="text" placeholder="ID(max:20)" class="form-control"
								id="id_" name="id_" required maxlength="20">
						</div>

						<div class="form-group">
							<input type="password" placeholder="PASSWORD(max:20)"
								class="form-control" id="pw" name="pw" required maxlength="20">
						</div>

						<button type="submit" class="btn btn-default">로그인</button>

					</form>

				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default btn-sm"
						data-dismiss="modal">Close</button>
				</div>
			</div>

		</div>
	</div>

	<!-- Delete Form Modal -->
	<div id="deleteFormModal" class="modal fade" role="dialog">
		<div class="modal-dialog">

			<!-- Modal content-->
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal">&times;</button>
					<h4 class="modal-title">Delete</h4>
				</div>
				<div class="modal-body">

					<form action="${pageContext.request.contextPath}/guestbookdelete.do" method="post">
					
						<!-- 삭제 진행을 위한 글번호(PK) 지정. hidden 태그 사용. -->
						<!-- <input type="hidden" value="글번호" id="식별자" name="식별자"> -->
						<input type="hidden" value="" id="gid" name="gid">

						<div class="form-group">
							선택한 자료를 삭제할까요?
						</div>

						<div class="form-group">
							<input type="password" placeholder="PASSWORD(max:20)"
								class="form-control" id="pw" name="pw" required maxlength="20">
						</div>

						<button type="submit" class="btn btn-default">삭제</button>

					</form>

				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default btn-sm"
						data-dismiss="modal">Close</button>
				</div>
			</div>

		</div>
	</div>
</body>
</html>





-------------------------------------
//adminbooklist.jsp(화면설계 코드)
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>	
<%-- Servlet MVC Pattern 에서 JSP 페이지 작성시 뷰 역할만 하기 때문에 액션 관련 코드는 모두 제거한다 --%>
<%-- 현재 페이지(*.jsp)를 직접 실행하지 않는다 --%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>GuestBook v2.0</title>
<meta name="viewport" content="width=device-width, initial-scale=1">

<link rel="stylesheet"
	href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
	
<!-- 외부 스크립트 파일 연결 -> 주의) 연결 순서 중요 -->
<script src="${pageContext.request.contextPath}/script/util.js"></script>

<script src="http://maps.googleapis.com/maps/api/js"></script>

<script
	src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script
	src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>

<style>

div.panel {
	box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0
		rgba(0, 0, 0, 0.19);
}

</style>
<script>
	$(document).ready(function() {

		//------------------------------------
		//남은 날짜 표시
		$("#day").text("(D-" + remainderOfDays("2017-10-27") + ")");
		//------------------------------------

		
		//------------------------------------
		//검색 진행후 검색 key, value를 유지하는 과정 추가
		var key = "${key}";
		var value = "${value}";
		$("select#key > option[value='"+key+"']").attr("selected", "selected");
		$("input#value").val(value);
		//------------------------------------
		
		
		//------------------------------------
		//블라인드 버튼 클릭시 폼 전송 과정 추가
		$("#boardTable .btnON").on("click", function() {
			$("#blindform #blind").val("1");
			$("#blindform #gid").val($(this).val());
			$("#blindform").submit();
		});
		$("#boardTable .btnOFF").on("click", function() {
			$("#blindform #blind").val("0");
			$("#blindform #gid").val($(this).val());
			$("#blindform").submit();
		});
		//------------------------------------
		

	}); //ready 이벤트
</script>


</head>
<body>

	<div class="container">
	
		<div>
			<h1 style="font-size: x-large;">
				<!-- 로고 이미지를 클릭하면 HOME 화면으로 이동하도록 설정 -->
				<a href="${pageContext.request.contextPath}/adminbooklist.do"><img src="${pageContext.request.contextPath}/img/sist_logo.png" alt="sist_logo.png" style="vertical-align: bottom;"></a> 방명록 관리자 <small>[v2.0 MVC Pattern] Java&amp;Python개발자
					과정 2017.03.31 ~ 2017.10.27 <span style="color: red;" id="day">(D-0)</span>
				</small>
			</h1>
		</div>

		<div class="panel-group">
		
			<nav class="navbar navbar-default" style="box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);">
				<div class="container-fluid">
					<ul class="nav navbar-nav">
						<li class="active"><a href="${pageContext.request.contextPath}/adminbooklist.do">방명록 관리</a></li>
						<li><a href="${pageContext.request.contextPath}/adminpicturelist.do">사진 관리</a></li>
						<li><a href="${pageContext.request.contextPath}/logout.do">로그아웃</a></li>
					</ul>
				</div>
			</nav>

			<div class="panel panel-default">
				<div class="panel-heading">방명록</div>
				<div class="panel-body">
					<table class="table" id="boardTable">
						<thead>
							<tr>
								<th>번호</th>
								<th>글쓴이</th>
								<th>글내용</th>
								<th>작성일</th>
								<th>ClientIP</th>
								<th>Blind</th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td>1</td>
								<td>관리자</td>
								<td>JSP 과정 진행 중입니다. 프로젝트 발표 사진도 올릴 예정입니다.</td>
								<td>2017-08-17</td>
								<td>211.63.89.68</td>
								<td><div class="btn-group"> <button type="button" class="btn btn-xs btn-default">On</button> <button type="button" class="btn btn-xs btn-default">Off</button> </div></td>
							</tr>
							 
							 
						</tbody>
					</table>

					<!-- action="" 속성이 없는 경우 자기 자신에게 전송된다. -->
					<form method="post" class="form-inline">

						<div class="form-group">
							<button type="button" class="btn btn-default btn-sm">
								TotalCount <span class="badge" id="totalCount">${totalcount}</span>							</button>
						</div>


						<div class="form-group">
							<button type="button" class="btn btn-default btn-sm">
								Count <span class="badge" id="count">${count}</span>
							</button>
						</div>

						<div class="form-group">
							<button type="button" class="btn btn-default btn-sm">
								BlindCount <span class="badge" id="blindcount">${blindcount}</span>
							</button>
						</div>

						<div class="form-group">
							<select class="form-control" name="key" id="key">
								<option value="name_">글쓴이</option>
								<option value="content_">글내용</option>
								<option value="regDate">작성일</option>
								<option value="name_content_">글쓴이+글내용</option>
							</select>
						</div>

						<div class="form-group">
							<input type="text" class="form-control" id="value" name="value">
						</div>

						<button type="submit" class="btn btn-default">Search</button>

					</form>

				</div>
			</div>
		</div>

	</div>
	
	<!-- 블라인드 처리를 위한 전용 폼 -->
	<form action="${pageContext.request.contextPath}/adminbookblind.do" method="get" id="blindform">
		<input type="hidden" name="blind" id="blind" value="">	
		<input type="hidden" name="gid" id="gid" value="">
		<!-- 주의) 서브밋 버튼이 없다 -->	
		<!-- <button type="submit" class="btn btn-default">Submit</button> -->
	</form>

</body>
</html>







-------------------------------------
//adminpicturelist.jsp(화면설계 코드)
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8" trimDirectiveWhitespaces="true"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">

<title>GuestBook v2.0</title>
<meta name="viewport" content="width=device-width, initial-scale=1">

<link rel="stylesheet"
	href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">

<!-- 외부 스크립트 파일 연결 -> 주의) 연결 순서 중요 -->
<script src="${pageContext.request.contextPath}/script/util.js"></script>

<script src="http://maps.googleapis.com/maps/api/js"></script>

<script
	src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script
	src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>

<style>
div.panel {
	box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0
		rgba(0, 0, 0, 0.19);
}
</style>
<script>
	$(document).ready(function() {

		//남은 날짜 표시
		$("#day").text("(D-" + remainderOfDays("2017-10-27") + ")");

	}); //ready 이벤트
</script>


</head>
<body>

	<div class="container">

		<div>
			<h1 style="font-size: x-large;">
				<!-- 로고 이미지를 클릭하면 HOME 화면으로 이동하도록 설정 -->
				<a href="${pageContext.request.contextPath}/adminpicturelist.do"><img
					src="${pageContext.request.contextPath}/img/sist_logo.png" alt="sist_logo.png"
					style="vertical-align: bottom;"></a> 방명록 관리자 <small>[v2.0
					MVC Pattern] Java&amp;Python개발자 과정 2017.03.31 ~ 2017.10.27 <span
					style="color: red;" id="day">(D-0)</span>
				</small>
			</h1>
		</div>

		<div class="panel-group">

			<nav class="navbar navbar-default"
				style="box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);">
				<div class="container-fluid">
					<ul class="nav navbar-nav">
						<li><a href="${pageContext.request.contextPath}/adminbooklist.do">방명록 관리</a></li>
						<li class="active"><a
							href="${pageContext.request.contextPath}/adminpicturelist.do">사진 관리</a></li>
						<li><a href="${pageContext.request.contextPath}/logout.do">로그아웃</a></li>
					</ul>
				</div>
			</nav>

			<div class="panel panel-default">
				<div class="panel-heading">사진 업로드</div>
				<div class="panel-body" id="demo">

					<form role="form" action="${pageContext.request.contextPath}/adminpictureinsert.do"
						method="post" enctype="multipart/form-data">
						<div class="form-group">
							<input type="text" class="form-control" id="caption_"
								name="caption_" placeholder="사진 설명 (50자 이내)" maxlength="50"
								required="required">
						</div>
						<div class="form-group">
							<input type="file" class="form-control" id="pic_filename"
								name="pic_filename" required="required"> <span
								class="help-block">(only .jpg or .png, 1M byte 이내)</span>
						</div>
						<button type="submit" class="btn btn-default">Submit</button>
					</form>

				</div>
			</div>


			<div class="panel panel-default">
				<div class="panel-heading">사진 목록</div>

				<div class="panel-body">

					<div class="row">
						<!-- div-row -->
						<div class="col-md-3">
							<div class="thumbnail">
								<a href="${pageContext.request.contextPath}/picture/chicago.jpg" target="_blank">
									<img src="${pageContext.request.contextPath}/picture/chicago.jpg" alt="chicago.jpg"
									style="width: 100%">
									<div class="caption">
										<p>시카고 공연</p>
									</div>
								</a>
							</div>
						</div>

						<div class="col-md-3">
							<div class="thumbnail">
								<a href="${pageContext.request.contextPath}/picture/la.jpg" target="_blank"> <img
									src="${pageContext.request.contextPath}/picture/la.jpg" alt="la.jpg"
									style="width: 100%">
									<div class="caption">
										<p>LA 공연</p>
									</div>
								</a>
							</div>
						</div>

						<div class="col-md-3">
							<div class="thumbnail">
								<a href="${pageContext.request.contextPath}/picture/ny.jpg" target="_blank"> <img
									src="${pageContext.request.contextPath}/picture/ny.jpg" alt="ny.jpg"
									style="width: 100%">
									<div class="caption">
										<p>뉴욕 공연</p>
									</div>
								</a>
							</div>
						</div>

						<div class="col-md-3">
							<div class="thumbnail">
								<a href="${pageContext.request.contextPath}/picture/ny.jpg" target="_blank"> <img
									src="${pageContext.request.contextPath}/picture/ny.jpg" alt="ny.jpg"
									style="width: 100%">
									<div class="caption">
										<p>테스트1</p>
									</div>
								</a>
							</div>
						</div>

					</div>
					<!-- div-row -->
					<hr>
					<div class="row">
						<!-- div-row -->
						<div class="col-md-3">
							<div class="thumbnail">
								<a href="${pageContext.request.contextPath}/picture/ny.jpg" target="_blank"> <img
									src="${pageContext.request.contextPath}/picture/ny.jpg" alt="ny.jpg"
									style="width: 100%">
									<div class="caption">
										<p>테스트2</p>
									</div>
								</a>
							</div>
						</div>

					</div>
					<!-- div-row -->
				</div>
			</div>

		</div>

	</div>

</body>
</html>




------------------------------------
//adminpicturefail.jsp (화면설계 코드)
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8" trimDirectiveWhitespaces="true"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>GuestBook v2.0</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet"
	href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<script
	src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script
	src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

</head>
<body>
	<div class="container">

		<div class="modal-dialog">

			<div>
				<h1 style="font-size: x-large;">
					<img src="${pageContext.request.contextPath}/img/sist_logo.png" alt="logo"
						style="vertical-align: bottom;"> 방명록 <small>v2.0 MVC Patterns</small>
				</h1>
			</div>

			<!-- Modal content-->
			<div class="modal-content">
				<div class="modal-header" style="padding: 35px 50px;">
					<h4>
						<span class="glyphicon glyphicon-lock"></span> 파일 업로드
					</h4>
					<label>파일업로드가 실패했습니다.</label>
				</div>
				<div class="modal-body" style="padding: 40px 50px;">
					<div class="form-group"></div>
					<a href="${pageContext.request.contextPath}/adminpicturelist.do" class="btn btn-default btn-block">Main</a>
				</div>
				<div class="modal-footer"></div>
			</div>

		</div>

	</div>
</body>
</html>







--------------------------------------
//logoutform.jsp(화면설계 코드)
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8" trimDirectiveWhitespaces="true"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>GuestBook v2.0</title>

<meta name="viewport" content="width=device-width, initial-scale=1">

<link rel="stylesheet"
	href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<script
	src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script
	src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

</head>
<body>
	<div class="container">

		<div class="modal-dialog">

			<div>
				<h1 style="font-size: x-large;">
					<img src="${pageContext.request.contextPath}/img/sist_logo.png" alt="logo"
						style="vertical-align: bottom;"> 방명록 <small>v2.0 MVC Pattern</small>
				</h1>
			</div>

			<!-- Modal content-->
			<div class="modal-content">
				<div class="modal-header" style="padding: 35px 50px;">
					<h4>
						<span class="glyphicon glyphicon-lock"></span> 로그인
					</h4>
					<label>안전하게 로그아웃 되었습니다.</label>
				</div>
				<div class="modal-body" style="padding: 40px 50px;">
					<div class="form-group"></div>
					<a href="${pageContext.request.contextPath}/guestbooklist.do" class="btn btn-default btn-block">Main</a>
				</div>
				<div class="modal-footer"></div>
			</div>

		</div>

	</div>
</body>
</html>




-------------------------------------
//loginfail.jsp(화면설계 코드)
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8" trimDirectiveWhitespaces="true"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>GuestBook v2.0</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet"
	href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<script
	src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script
	src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

</head>
<body>
	<div class="container">

		<div class="modal-dialog">

			<div>
				<h1 style="font-size: x-large;">
					<img src="${pageContext.request.contextPath}/img/sist_logo.png" alt="logo"
						style="vertical-align: bottom;"> 방명록 <small>v2.0 MVC Patterns</small>
				</h1>
			</div>

			<!-- Modal content-->
			<div class="modal-content">
				<div class="modal-header" style="padding: 35px 50px;">
					<h4>
						<span class="glyphicon glyphicon-lock"></span> 로그인
					</h4>
					<label>로그인에 실패했습니다.</label>
				</div>
				<div class="modal-body" style="padding: 40px 50px;">
					<div class="form-group"></div>
					<a href="${pageContext.request.contextPath}/guestbooklist.do" class="btn btn-default btn-block">Main</a>
				</div>
				<div class="modal-footer"></div>
			</div>

		</div>

	</div>
</body>
</html>





-----------------------------------
//web.xml
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	id="WebApp_ID" version="3.1">
	<display-name>servlet mvc pattern</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
    
    <servlet>
        <servlet-name>controller</servlet-name>
        <servlet-class>com.test.ControllerServlet</servlet-class>
        <init-param>
        	<param-name>ext</param-name>
        	<param-value>.do</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>controller</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping> 
    
</web-app>








-------------------------------------
//DBConnection.java
package com.test;

import java.sql.*;

//데이터베이스 연결 정보 관리 클래스
public class DBConnection {
	
	// JDBC driver name and database URL
	private static final String JDBC_DRIVER = "oracle.jdbc.driver.OracleDriver";
	private static final String DB_URL = "jdbc:oracle:thin:@IP주소:1521:xe";

	// Database credentials
	private static final String USER = "사용자아이디";
	private static final String PASS = "사용자패스워드";	
	
	private static Connection conn;
	
	//데이테베이스 커넥션 객체 생성 메소드
	public static Connection connect() throws ClassNotFoundException, SQLException {
		
		// STEP 2: Register JDBC driver
		Class.forName(JDBC_DRIVER);
		// STEP 3: Open a connection
		conn = DriverManager.getConnection(DB_URL, USER, PASS);
		
		return conn;
	}
	
	//데이테베이스 커넥션 객체 소멸 메소드
	public static void close() throws SQLException {
		if (conn != null) {
			conn.close();
		}
	}
	
}





---------------------------------------
//AdminServiceClass.java
package com.test;

import java.io.*;
import java.util.List;

import javax.servlet.*;
import javax.servlet.http.*;

/* cos.jar 파일을 이용한 파일 업로드 과정 추가 */
import com.oreilly.servlet.*;

public class AdminServiceClass {

	// "/test.do" 요청주소와 매핑되는 메소드
	public String test(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		// 액션 코드 작성
		request.setAttribute("value", "TEST");

		// 뷰 페이지 주소 지정 -> 포워딩
		return "/WEB-INF/view/test.jsp";

	}
	
	// "/adminbooklist.do" 요청주소와 매핑되는 메소드
	public String adminbooklist(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		
		//관리자 로그인 검사 과정 추가
		HttpSession session = request.getSession();
		Object obj = session.getAttribute("logininfo");
		if (obj == null) {
			// 뷰 페이지 주소 지정 -> 리다이렉트
			return String.format("/WEB-INF/view/redirect.jsp?url=loginfail.do&code=000");
		}
		

		//액션 코드
		request.setCharacterEncoding("UTF-8");

		String count = "0";
		String totalcount = "0";

		//검색 기능 추가
		String key = request.getParameter("key");
		String value = request.getParameter("value");
		if (key == null) {
			//최초 실행시 key, value가 null인 상태이다.
			//전체 출력용 key 값 지정
			key = "all";
			value = "";
		}
		
		GuestbookDAO dao = new GuestbookDAO();
		List<Guestbook> guestbooks = null; 

		//관리자용 전체 출력 + 검색 출력
		guestbooks = dao.adminGuestbookList(key, value);
		
		//검색(or 전체) 결과 개수
		count = String.valueOf(guestbooks.size());
		
		//관리자용 전체 개수 (블라인드, 검색 결과와 관계 없다)
		totalcount = String.valueOf(dao.adminGuestbookCount());
		
		request.setAttribute("guestbooks", guestbooks);
		request.setAttribute("count", count);
		request.setAttribute("totalcount", totalcount);
		request.setAttribute("key", key);
		request.setAttribute("value", value);
		
		// 뷰 페이지 주소 지정 -> 포워딩
		return "/WEB-INF/view/adminbooklist.jsp";
	}
	
	// "/adminbookblind.do" 요청주소와 매핑되는 메소드
	public String adminbookblind(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		//관리자 로그인 검사 과정 추가
		HttpSession session = request.getSession();
		Object obj = session.getAttribute("logininfo");
		if (obj == null) {
			// 뷰 페이지 주소 지정 -> 리다이렉트
			return String.format("/WEB-INF/view/redirect.jsp?url=loginfail.do&code=000");
		}
		
		//액션 코드
		request.setCharacterEncoding("UTF-8");
		String gid = request.getParameter("gid");
		String blind = request.getParameter("blind");
		
		String code = "301"; //블라인드 처리 실패 초기값

		if (!(gid == null || gid.equals(""))) {
			
			Guestbook g = new Guestbook();
			g.setGid(gid);
			g.setBlind(Integer.parseInt(blind));

			GuestbookDAO dao = new GuestbookDAO();
			code = dao.adminGuestBookBlind(g);

		}
		
		// 뷰 페이지 주소 지정 -> 리다이렉트
		return String.format("/WEB-INF/view/redirect.jsp?url=adminbooklist.do&code=%s", code);
	}
	
	// "/adminpicturelist.do" 요청주소와 매핑되는 메소드
	public String adminpicturelist(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		//관리자 로그인 검사 과정 추가
		HttpSession session = request.getSession();
		Object obj = session.getAttribute("logininfo");
		if (obj == null) {
			// 뷰 페이지 주소 지정 -> 리다이렉트
			return String.format("/WEB-INF/view/redirect.jsp?url=loginfail.do&code=000");
		}
		
		//액션 코드

		//사진 출력용 객체 준비
		List<Guestbook> picturelist = null;

		//사진 출력 액션
		GuestbookDAO dao = new GuestbookDAO();
		picturelist = dao.pictureList();
		
		request.setAttribute("picturelist", picturelist);
		
		// 뷰 페이지 주소 지정 -> 포워딩
		return "/WEB-INF/view/adminpicturelist.jsp";
	}
	
	// "/adminpictureinsert.do" 요청주소와 매핑되는 메소드
	public String adminpictureinsert(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		//관리자 로그인 검사 과정 추가
		HttpSession session = request.getSession();
		Object obj = session.getAttribute("logininfo");
		if (obj == null) {
			// 뷰 페이지 주소 지정 -> 리다이렉트
			return String.format("/WEB-INF/view/redirect.jsp?url=loginfail.do&code=000");
		}

		
		//액션 코드
		
		//picture 폴더에 대한 물리적 절대 경로 확인
		String savePath = request.getServletContext().getRealPath("picture");
		System.out.println(savePath);
		
		int sizeLimit = 1024 * 1024; //1M

		//파일 업로드 성공시 리다이렉트할 주소
		String url = "adminpicturelist.do"; 
		
		try {
			MultipartRequest multi = new MultipartRequest(request,
					savePath, sizeLimit, "UTF-8", new MyFileRenamePolicy());
			
			//확장자 검사 -> 예외 발생
			if (multi.getContentType("pic_filename").equals("image/jpeg")
					|| multi.getContentType("pic_filename").equals("image/png")) {

				//정상적인 경우 데이터베이스에 정보 저장
				
				String pic_filename = multi.getFilesystemName("pic_filename");
				//주의) request.getParameter() 메소드가 아님.
				String caption_ = multi.getParameter("caption_");
				
				Guestbook picture = new Guestbook();
				picture.setPic_filename(pic_filename);
				picture.setCaption_(caption_);
				
				GuestbookDAO dao = new GuestbookDAO();
				dao.pictureAdd(picture);
				
				
			} else {
				//물리적 파일 삭제 과정 추가
				java.io.File temp = new java.io.File(String.format("%s//%s", savePath, multi.getFilesystemName("fileName")));
				temp.delete();
				 
				//예외 발생시 -> 업로드된 파일에 대한 처리 부족
				throw new Exception();
			}
			
		}catch(Exception e) {
			//파일 업로드 실패시 리다이렉트할 주소
			url = "adminpicturefail.do";
		}

		// 뷰 페이지 주소 지정 -> 리다이렉트
		return String.format("/WEB-INF/view/redirect.jsp?url=%s&code=000", url);
	}
	
	
	// "/adminpicturefail.do" 요청주소와 매핑되는 메소드
	public String adminpicturefail(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		//관리자 로그인 검사 과정 추가
		HttpSession session = request.getSession();
		Object obj = session.getAttribute("logininfo");
		if (obj == null) {
			// 뷰 페이지 주소 지정 -> 리다이렉트
			return String.format("/WEB-INF/view/redirect.jsp?url=loginfail.do&code=000");
		}
		
		return "/WEB-INF/view/adminpicturefail.jsp";
	}
	
	
	//문제) "/adminpicturedelete.do" 요청주소와 매핑되는 메소드 추가
	public String adminpicturedelete(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		//관리자 로그인 검사 과정 추가
		HttpSession session = request.getSession();
		Object obj = session.getAttribute("logininfo");
		if (obj == null) {
			// 뷰 페이지 주소 지정 -> 리다이렉트
			return String.format("/WEB-INF/view/redirect.jsp?url=loginfail.do&code=000");
		}
		
		//액션 코드
		request.setCharacterEncoding("UTF-8");
		String pid = request.getParameter("pid");
		String pic_filename = request.getParameter("pic_filename");
		
		System.out.println(pid);
		System.out.println(pic_filename);
		
		//데이터베이스에서 사진 정보 삭제하는 과정
		String code = "501";
		Guestbook picture = new Guestbook();
		picture.setPid(pid);
		GuestbookDAO dao = new GuestbookDAO();
		code = dao.pictureRemove(picture);

		if (code.equals("500")) {
			//물리적 파일 삭제하는 과정
			String savePath = request.getServletContext().getRealPath("picture");
			java.io.File temp = new java.io.File(String.format("%s//%s", savePath, pic_filename));
			temp.delete();
		}
		
		// 뷰 페이지 주소 지정 -> 리다이렉트
		return String.format("/WEB-INF/view/redirect.jsp?url=adminpicturelist.do&code=%s", code);
	}
	
}







--------------------------------------------------
//ControllerServlet.java
package com.test;

import java.io.IOException;
import java.lang.reflect.Method;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class ControllerServlet extends HttpServlet {

	private static final long serialVersionUID = -411466478137741069L;

	//확장자 문자열 저장용 임시 변수
    private String ext;

    //init() 메소드는 서블릿이 최초 실행시 자동 호출되는 메소드
    //->주의) 한 번만 호출되고 실행된다.
    public void init() throws ServletException {
    	
    	//web.xml 안에 있는 <init-param> 엘리먼트 정보
        ext = getInitParameter("ext");
 
    }
	
	
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		//doGet() 메소드가 처리할 내용을 사용자 정의 메소드로 넘긴다.
		processRequest(req, resp);
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		//doPost() 메소드가 처리할 내용을 사용자 정의 메소드로 넘긴다.
		processRequest(req, resp);
	}
	
	//사용자 정의 메소드 추가
	//-> doGet() + doPost()
	//-> 사용자 요청 방식을 구분하지 않고 하나로 통합 처리 가능.
	private void processRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		//1. 사용자 요청(/hello.do or /test.do)에 대한 분석 처리
		//2. 적절한 모델 클래스 액션 요청
		//3. 돌려받은 결과를 뷰(JSP) 페이지로 전달
		//-> request 객체에 결과 저장 후 
		//-> RequestDispatcher 객체를 이용한 포워딩
		
		//사용자 요청 주소 분석 -> 특정 메소드와 매핑
		//사용자 요청 주소가 /hello.do 인 경우 -> hello()
		//사용자 요청 주소가 /test.do 인 경우 -> test()
		String command = request.getRequestURI();
		//System.out.println(command); //"/프로젝트이름/test.do"
		if (command.indexOf(request.getContextPath()) == 0) {
			command = command.substring(request.getContextPath().length());
			//System.out.println(command); //"/test.do"
		}
		command = command.substring(1, command.indexOf(ext));
		//System.out.println(command); //"test"
		
		//AdminServiceClass, LoginServiceClass, GuestbookServiceClass 객체의 특정 메소드 호출(invoke) 및 View 정보 반환
		String viewPage = "";
		try {
			
			//guestbook** 액션 요청시 사용하는 클래스
			if (command.startsWith("guestbook")) {
				GuestbookServiceClass service = new GuestbookServiceClass();
				Method m = GuestbookServiceClass.class.getMethod(command, HttpServletRequest.class, HttpServletResponse.class);
				viewPage = (String)m.invoke(service, request, response);
			}
			
			//admin** 액션 요청시 사용하는 클래스
			if (command.startsWith("admin")) {
				AdminServiceClass service = new AdminServiceClass();
				Method m = AdminServiceClass.class.getMethod(command, HttpServletRequest.class, HttpServletResponse.class);
				viewPage = (String)m.invoke(service, request, response);
			}
			
			//log** 액션 요청시 사용하는 클래스
			if (command.startsWith("log")) {
				LoginServiceClass service = new LoginServiceClass();
				Method m = LoginServiceClass.class.getMethod(command, HttpServletRequest.class, HttpServletResponse.class);
				viewPage = (String)m.invoke(service, request, response);
			}
			
		} catch(Exception e) {
			e.printStackTrace();
		}
		
		//View 페이지 포워딩
		RequestDispatcher dispatcher = request.getRequestDispatcher(viewPage);
		dispatcher.forward(request, response);
	
	}
	

}








------------------------------------------
//Guestbook.java
package com.test;

public class Guestbook {
	
	private String gid, name_, pw, content_, regDate, clientIP;
	
	//사진 정보 멤버 추가
	private String pid, pic_filename, caption_;
	
	//블라인드 멤버 추가
	private int blind; //0 off, 1 on
	
	public int getBlind() {
		return blind;
	}

	public void setBlind(int blind) {
		this.blind = blind;
	}

	public String getPid() {
		return pid;
	}

	public void setPid(String pid) {
		this.pid = pid;
	}

	public String getPic_filename() {
		return pic_filename;
	}

	public void setPic_filename(String pic_filename) {
		this.pic_filename = pic_filename;
	}

	public String getCaption_() {
		return caption_;
	}

	public void setCaption_(String caption_) {
		this.caption_ = caption_;
	}

	public String getGid() {
		return gid;
	}

	public void setGid(String gid) {
		this.gid = gid;
	}

	public String getName_() {
		return name_;
	}

	public void setName_(String name_) {
		this.name_ = name_;
	}

	public String getPw() {
		return pw;
	}

	public void setPw(String pw) {
		this.pw = pw;
	}

	public String getContent_() {
		return content_;
	}

	public void setContent_(String content_) {
		this.content_ = content_;
	}

	public String getRegDate() {
		return regDate;
	}

	public void setRegDate(String regDate) {
		this.regDate = regDate;
	}

	public String getClientIP() {
		return clientIP;
	}

	public void setClientIP(String clientIP) {
		this.clientIP = clientIP;
	}
	
	

}









--------------------------------------------------
//GuestbookDAO.java
package com.test;

import java.sql.*;
import java.util.*;

//데이터베이스 액션 클래스
public class GuestbookDAO {

	// 방명록 전체 + 검색 자료 반환 메소드
	public List<Guestbook> guestbookList(String key, String value) {
		List<Guestbook> result = new ArrayList<Guestbook>();

		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = DBConnection.connect();

			//주의) userGuestbookView 사용할 것.
			//전체 + 검색 쿼리 준비
			String sql = "SELECT gid, name_, content_, TO_CHAR(regDate , 'YYYY-MM-DD') AS regDate, clientIP	FROM userGuestbookView";
			
			//WHERE 조건절 추가 -> 검색 기능 -> 전체 출력인 경우 WHERE 조건절 생략
			switch (key) {
			case "all":
				break;
			case "name_":
				sql += " WHERE INSTR(name_, ?) > 0";
				break;
			case "content_":
				sql += " WHERE INSTR(content_, ?) > 0";
				break;
			case "regDate":
				sql += " WHERE INSTR(TO_CHAR(regDate , 'YYYY-MM-DD'), ?) > 0";
				break;
			case "name_content_":
				sql += " WHERE INSTR(name_, ?) > 0 OR INSTR(content_, ?) > 0";
				break;
			}
			
			//정렬 기능 추가
			sql += " ORDER BY gid";
			
			//주의) 이 부분에 sql 구문 출력할 것. 액션 진행 상황 분석용.
			System.out.println(sql);
			
			pstmt = conn.prepareStatement(sql);

			//전체 + 검색 진행시 데이터 바인딩 과정 추가
			switch (key) {
			case "all":
				break;
			case "name_":
			case "content_":
			case "regDate":
				pstmt.setString(1, value);
				break;
			case "name_content_":
				pstmt.setString(1, value);
				pstmt.setString(2, value);
				break;
			}
			
			ResultSet rs = pstmt.executeQuery();

			while (rs.next()) {
				String gid = rs.getString("gid");
				String name_ = rs.getString("name_");
				String content_ = rs.getString("content_");
				String regDate = rs.getString("regDate");
				String clientIP = rs.getString("clientIP");

				Guestbook g = new Guestbook();
				g.setGid(gid);
				g.setName_(name_);
				g.setContent_(content_);
				g.setRegDate(regDate);
				g.setClientIP(clientIP);

				result.add(g);
			}
			rs.close();
		} catch (ClassNotFoundException | SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if (pstmt != null)
					pstmt.close();
			} catch (SQLException se2) {
			}
			try {
				DBConnection.close();
			} catch (SQLException se) {
				se.printStackTrace();
			}
		}

		return result;

	}
	
	
	// 방명록 전체 자료 개수 반환 메소드
	public int guestbookCount() {
		int result = 0;

		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = DBConnection.connect();
			
			//주의) userGuestbookView 사용할 것.
			String sql = "SELECT COUNT(*) AS count_ FROM userGuestbookView";
			//주의) 이 부분에 sql 구문 출력할 것. 액션 진행 상황 분석용.
			System.out.println(sql);
			
			pstmt = conn.prepareStatement(sql);
			ResultSet rs = pstmt.executeQuery();

			while (rs.next()) {
				result = rs.getInt("count_");
			}
			rs.close();
		} catch (ClassNotFoundException | SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if (pstmt != null)
					pstmt.close();
			} catch (SQLException se2) {
			}
			try {
				DBConnection.close();
			} catch (SQLException se) {
				se.printStackTrace();
			}
		}

		return result;

	}
	
	// 방명록 글쓰기 정보 저장 메소드
	public String guestbookAdd(Guestbook g) {
		String temp = "101"; //글쓰기 실패

		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = DBConnection.connect();

			String sql = "INSERT INTO guestbook(gid, name_, pw, content_, regDate, clientIP) VALUES ((SELECT NVL(MAX(gid), 0) + 1 AS newNum FROM guestbook), ?, ?, ?, SYSDATE, ?)";
			//주의) 이 부분에 sql 구문 출력할 것. 액션 진행 상황 분석용.
			System.out.println(sql);
					
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, g.getName_());
			pstmt.setString(2, g.getPw());
			pstmt.setString(3, g.getContent_());
			pstmt.setString(4, g.getClientIP());
			
			pstmt.executeUpdate();
			temp = "100"; //글쓰기 성공

		} catch (ClassNotFoundException | SQLException e) {
			temp = "101"; //글쓰기 실패
		} finally {
			try {
				if (pstmt != null)
					pstmt.close();
			} catch (SQLException se2) {
			}
			try {
				DBConnection.close();
			} catch (SQLException se) {
				se.printStackTrace();
			}
		}

		return temp;
	}
	
	
	
	// 방명록 글정보 삭제 메소드
	public String guestbookRemove(Guestbook g) {

		//삭제 진행시 반환값이 '0'일수도 있기 때문에 기본값으로 '201'을 지정한다.
		String temp = "201";

		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = DBConnection.connect();

			String sql = "DELETE FROM guestbook WHERE gid=? AND pw=?";
			//주의) 이 부분에 sql 구문 출력할 것. 액션 진행 상황 분석용.
			System.out.println(sql);
					
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, g.getGid());
			pstmt.setString(2, g.getPw());
			
			int result = pstmt.executeUpdate();
			
			//삭제 진행시 반환값이 '0'일수도 있기 때문에 '1' 이상인 경우만 삭제 성공으로 지정한다.
			if (result > 0) {
				temp = "200";
			}

		} catch (ClassNotFoundException | SQLException e) {
			//삭제 진행시 입력과 다르게 구문 오류가 발생할 가능성이 낮다.
			//단, 데이터베이스 연결이 실패할 수는 있다.
			temp = "201";
		} finally {
			try {
				if (pstmt != null)
					pstmt.close();
			} catch (SQLException se2) {
			}
			try {
				DBConnection.close();
			} catch (SQLException se) {
				se.printStackTrace();
			}
		}

		return temp;
	}
	
	
	// 사진 자료 반환 메소드
	public List<Guestbook> pictureList() {
		List<Guestbook> result = new ArrayList<Guestbook>();

		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = DBConnection.connect();

			//전체 쿼리 준비
			String sql = "SELECT pid, pic_filename, caption_ FROM picturelist ORDER BY pid";
			
			//주의) 이 부분에 sql 구문 출력할 것. 액션 진행 상황 분석용.
			System.out.println(sql);
			
			pstmt = conn.prepareStatement(sql);
			ResultSet rs = pstmt.executeQuery();

			while (rs.next()) {
				String pid = rs.getString("pid");
				String pic_filename = rs.getString("pic_filename");
				String caption_ = rs.getString("caption_");

				Guestbook g = new Guestbook();
				g.setPid(pid);
				g.setPic_filename(pic_filename);
				g.setCaption_(caption_);

				result.add(g);
			}
			rs.close();
			
		} catch (ClassNotFoundException | SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if (pstmt != null)
					pstmt.close();
			} catch (SQLException se2) {
			}
			try {
				DBConnection.close();
			} catch (SQLException se) {
				se.printStackTrace();
			}
		}

		return result;

	}
	
	// 사진 정보 저장 메소드
	public String pictureAdd(Guestbook g) {
		String temp = "401";

		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = DBConnection.connect();

			String sql = "INSERT INTO picturelist (pid, pic_filename, caption_)	VALUES ((SELECT NVL(MAX(pid), 0) + 1 AS newNum FROM picturelist), ?, ?)";
			//주의) 이 부분에 sql 구문 출력할 것. 액션 진행 상황 분석용.
			System.out.println(sql);
					
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, g.getPic_filename());
			pstmt.setString(2, g.getCaption_());
			
			pstmt.executeUpdate();
			temp = "400";

		} catch (ClassNotFoundException | SQLException e) {
			temp = "401";
		} finally {
			try {
				if (pstmt != null)
					pstmt.close();
			} catch (SQLException se2) {
			}
			try {
				DBConnection.close();
			} catch (SQLException se) {
				se.printStackTrace();
			}
		}

		return temp;
	}
	
	
	// 관리자용 방명록 전체 + 검색 자료 반환 메소드
	public List<Guestbook> adminGuestbookList(String key, String value) {
		List<Guestbook> result = new ArrayList<Guestbook>();

		//adminGuestbookView 사용
		//blind 항목 추가
		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = DBConnection.connect();

			//주의) adminGuestbookView 사용할 것.
			//전체 + 검색 쿼리 준비
			String sql = "SELECT gid, name_, content_, TO_CHAR(regDate , 'YYYY-MM-DD') AS regDate, clientIP, blind FROM adminGuestbookView";
			
			//WHERE 조건절 추가 -> 검색 기능 -> 전체 출력인 경우 WHERE 조건절 생략
			switch (key) {
			case "all":
				break;
			case "name_":
				sql += " WHERE INSTR(name_, ?) > 0";
				break;
			case "content_":
				sql += " WHERE INSTR(content_, ?) > 0";
				break;
			case "regDate":
				sql += " WHERE INSTR(TO_CHAR(regDate , 'YYYY-MM-DD'), ?) > 0";
				break;
			case "name_content_":
				sql += " WHERE INSTR(name_, ?) > 0 OR INSTR(content_, ?) > 0";
				break;
			}
			
			//정렬 기능 추가
			sql += " ORDER BY gid";
			
			//주의) 이 부분에 sql 구문 출력할 것. 액션 진행 상황 분석용.
			System.out.println(sql);
			
			pstmt = conn.prepareStatement(sql);

			//전체 + 검색 진행시 데이터 바인딩 과정 추가
			switch (key) {
			case "all":
				break;
			case "name_":
			case "content_":
			case "regDate":
				pstmt.setString(1, value);
				break;
			case "name_content_":
				pstmt.setString(1, value);
				pstmt.setString(2, value);
				break;
			}
			
			ResultSet rs = pstmt.executeQuery();

			while (rs.next()) {
				String gid = rs.getString("gid");
				String name_ = rs.getString("name_");
				String content_ = rs.getString("content_");
				String regDate = rs.getString("regDate");
				String clientIP = rs.getString("clientIP");
				int blind = rs.getInt("blind");
				
				Guestbook g = new Guestbook();
				g.setGid(gid);
				g.setName_(name_);
				g.setContent_(content_);
				g.setRegDate(regDate);
				g.setClientIP(clientIP);
				g.setBlind(blind);

				result.add(g);
			}
			rs.close();
		} catch (ClassNotFoundException | SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if (pstmt != null)
					pstmt.close();
			} catch (SQLException se2) {
			}
			try {
				DBConnection.close();
			} catch (SQLException se) {
				se.printStackTrace();
			}
		}

		
		return result;
	}
	
	
	// 관리자용 방명록 전체 자료 개수 반환 메소드
	public int adminGuestbookCount() {
		int result = 0;
		
		//adminGuestbookView 사용
		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = DBConnection.connect();
			
			//주의) adminGuestbookView 사용할 것.
			String sql = "SELECT COUNT(*) AS count_ FROM adminGuestbookView";
			//주의) 이 부분에 sql 구문 출력할 것. 액션 진행 상황 분석용.
			System.out.println(sql);
			
			pstmt = conn.prepareStatement(sql);
			ResultSet rs = pstmt.executeQuery();

			while (rs.next()) {
				result = rs.getInt("count_");
			}
			rs.close();
		} catch (ClassNotFoundException | SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if (pstmt != null)
					pstmt.close();
			} catch (SQLException se2) {
			}
			try {
				DBConnection.close();
			} catch (SQLException se) {
				se.printStackTrace();
			}
		}
		return result;
	}
	

	// 관리자용 방명록 블라인드 처리 메소드
	public String adminGuestBookBlind(Guestbook g) {
		String temp = "301"; //블라인드 처리 실패 초기값

		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = DBConnection.connect();

			String sql = "UPDATE guestbook SET blind=? WHERE gid=?";
			//주의) 이 부분에 sql 구문 출력할 것. 액션 진행 상황 분석용.
			System.out.println(sql);
					
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, g.getBlind());
			pstmt.setString(2, g.getGid());
			
			pstmt.executeUpdate();
			temp = "300"; //블라인드 처리 성공

		} catch (ClassNotFoundException | SQLException e) {
			temp = "301";
		} finally {
			try {
				if (pstmt != null)
					pstmt.close();
			} catch (SQLException se2) {
			}
			try {
				DBConnection.close();
			} catch (SQLException se) {
				se.printStackTrace();
			}
		}

		return temp;
	}


	
	//문제) 사진 정보 삭제 메소드 추가
	public String pictureRemove(Guestbook g) {
		String temp = "501";

		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = DBConnection.connect();

			String sql = "DELETE FROM picturelist WHERE pid=?";

			//주의) 이 부분에 sql 구문 출력할 것. 액션 진행 상황 분석용.
			System.out.println(sql);
					
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, g.getPid());
			
			pstmt.executeUpdate();
			temp = "500";

		} catch (ClassNotFoundException | SQLException e) {
			temp = "501";
		} finally {
			try {
				if (pstmt != null)
					pstmt.close();
			} catch (SQLException se2) {
			}
			try {
				DBConnection.close();
			} catch (SQLException se) {
				se.printStackTrace();
			}
		}

		return temp;
	}
	
	
	
}








-------------------------------------------------
//GuestbookServiceClass.java
package com.test;

import java.io.*;
import java.util.List;

import javax.servlet.*;
import javax.servlet.http.*;

public class GuestbookServiceClass {

	// "/guestbooklist.do" 요청주소와 매핑되는 메소드
	public String guestbooklist(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		// 액션 코드 작성

		request.setCharacterEncoding("UTF-8");

		String count = "0";
		String totalcount = "0";

		//글쓰기 성공, 실패 메시지 반환
		String code = request.getParameter("code");
		if (code == null) {
			code = "000";
		}
		
		//글삭제 성공, 실패 메시지 반환
		String dcode = request.getParameter("dcode");
		if (dcode == null) {
			dcode = "000";
		}
		
		//검색 기능 추가
		String key = request.getParameter("key");
		String value = request.getParameter("value");
		if (key == null) {
			//최초 실행시 key, value가 null인 상태이다.
			//전체 출력용 key 값 지정
			key = "all";
			value = "";
		}
		
		GuestbookDAO dao = new GuestbookDAO();
		List<Guestbook> guestbooks = null; 

		//사진 출력용 객체 준비
		List<Guestbook> picturelist = null; 

		//전체 출력 + 검색 출력
		guestbooks = dao.guestbookList(key, value);
		
		//사진 출력 액션
		picturelist = dao.pictureList();
		
		//검색(or 전체) 결과 개수
		count = String.valueOf(guestbooks.size());
		
		//전체 개수 (검색 결과와 관계 없다)
		totalcount = String.valueOf(dao.guestbookCount());
				
		request.setAttribute("totalcount", totalcount);
		request.setAttribute("count", count);
		request.setAttribute("picturelist", picturelist);
		request.setAttribute("guestbooks", guestbooks);
		request.setAttribute("key", key);
		request.setAttribute("value", value);
		request.setAttribute("code", code);
		request.setAttribute("dcode", dcode);
		
		// 뷰 페이지 주소 지정 -> 포워딩
		return "/WEB-INF/view/guestbooklist.jsp";

	}
	
	// "/guestbookinsert.do" 요청주소와 매핑되는 메소드
	public String guestbookinsert(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
	
		//액션 코드
		request.setCharacterEncoding("UTF-8");
		String name_ = request.getParameter("name_");
		String pw = request.getParameter("pw");
		String content_ = request.getParameter("content_");
		String clientIP = request.getRemoteAddr();

		String code = "101"; //글쓰기 실패

		if (!(name_ == null || name_.equals(""))) {
			
			Guestbook g = new Guestbook();
			g.setName_(name_);
			g.setPw(pw);
			g.setContent_(content_);
			g.setClientIP(clientIP);

			GuestbookDAO dao = new GuestbookDAO();
			code = dao.guestbookAdd(g);

		}
		
		// 뷰 페이지 주소 지정 -> 리다이렉트
		return String.format("/WEB-INF/view/redirect.jsp?url=guestbooklist.do&code=%s", code);
	}
	
	
	// "/guestbookdelete.do" 요청주소와 매핑되는 메소드
	public String guestbookdelete(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		//액션 코드
		request.setCharacterEncoding("UTF-8");
		String gid = request.getParameter("gid");
		String pw = request.getParameter("pw");
		
		String code = "201";  //글삭제 실패

		if (!(gid == null || gid.equals(""))) {
			
			Guestbook g = new Guestbook();
			g.setGid(gid);
			g.setPw(pw);

			GuestbookDAO dao = new GuestbookDAO();
			code = dao.guestbookRemove(g);

		}
		
		// 뷰 페이지 주소 지정 -> 리다이렉트
		return String.format("/WEB-INF/view/redirect.jsp?url=guestbooklist.do&code=%s", code);

	}
	
}









---------------------------------------------------
//LoginDAO.java
package com.test;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class LoginDAO {
	
	//매개변수에 grade 항목 추가
	//-> 관리자 로그인
	public LoginInfo login(String id_, String pw, String grade) {

		//초기값으로 null 지정
		LoginInfo result = null;
		
		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = DBConnection.connect();
			
			//grade 항목 추가
			String sql = "SELECT id_, pw, grade FROM guestbooklogin WHERE id_=? AND pw=? AND grade=0";
			
			System.out.println(sql);
			
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, id_);
			pstmt.setString(2, pw);
			ResultSet rs = pstmt.executeQuery();
			
			//SELECT 결과가 존재하는 경우만 while 블럭 실행
			//id_, pw_가 데이터베이스에 존재하는 경우만 while 블럭 실행
			while(rs.next()) {
				
				int g = rs.getInt("grade");
				
				//로그인 성공한 경우 개인 정보를 임시 객체에 저장
				result = new LoginInfo();
				result.setId_(id_);
				result.setGrade(g);
				
			}
			
			rs.close();
			
		} catch (ClassNotFoundException | SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if (pstmt != null)
					pstmt.close();
			} catch (SQLException se2) {
			}
			try {
				DBConnection.close();
			} catch (SQLException se) {
				se.printStackTrace();
			}
		}
		
		
		return result;
	}

	
}







-----------------------------------------
//LoginInfo.java
package com.test;

public class LoginInfo {
	
	private String id_, pw;
	private int grade; //등급 확인용 멤버 추가. 관리자(0)
	
	public int getGrade() {
		return grade;
	}

	public void setGrade(int grade) {
		this.grade = grade;
	}

	public String getId_() {
		return id_;
	}

	public void setId_(String id_) {
		this.id_ = id_;
	}

	public String getPw() {
		return pw;
	}

	public void setPw(String pw) {
		this.pw = pw;
	}

}








------------------------------------------
//LoginServiceClass.java
package com.test;

import java.io.*;

import javax.servlet.*;
import javax.servlet.http.*;

public class LoginServiceClass {

	// "/login.do" 요청주소와 매핑되는 메소드
	public String login(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		// 액션 코드 작성
		/*
		1. 로그인 정보(id_, pw) 수신
		2. 데이터베이스 질의 
		3. 반환된 결과값 분석
		4. (로그인 성공한 경우) 세션 객체 생성
		5. 페이지 전환
		*/
		request.setCharacterEncoding("UTF-8");
		String id_ = request.getParameter("id_");
		String pw = request.getParameter("pw");
		
		String url = "loginfail.do"; //로그인 실패 초기값
		
		if (id_ == null || id_.equals("")) {
			
		} else {
			
			LoginDAO dao = new LoginDAO();
			/* login() 메소드에서 "0"은 관리자 로그인 구분하는 값 */
			LoginInfo result = dao.login(id_, pw, "0");
			
			if (result instanceof LoginInfo) {
				
				//세션 객체 생성
				HttpSession session = request.getSession();
				session.setAttribute("logininfo", result);
				url = "adminbooklist.do"; //로그인 성공
				
			}
		}
		
		// 뷰 페이지 주소 지정 -> 리다이렉트
		return String.format("/WEB-INF/view/redirect.jsp?url=%s&code=000", url);

	}
	
	// "/logout.do" 요청주소와 매핑되는 메소드
	public String logout(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		// 액션 코드 작성
		// 세션 객체 소멸
		HttpSession session = request.getSession();
		session.invalidate();

		// 뷰 페이지 주소 지정 -> 리다이렉트
		return String.format("/WEB-INF/view/redirect.jsp?url=logoutform.do&code=000");

	}
	
	
	// "/loginfail.do" 요청주소와 매핑되는 메소드
	public String loginfail(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		// 뷰 페이지 주소 지정 -> 포워딩
		return "/WEB-INF/view/loginfail.jsp";

	}
	
	// "/logoutform.do" 요청주소와 매핑되는 메소드
	public String logoutform(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		// 뷰 페이지 주소 지정 -> 포워딩
		return "/WEB-INF/view/logoutform.jsp";

	}
	
}













--------------------------------------------------
//MyFileRenamePolicy.java
package com.test;

import java.io.*;
import java.util.*;
import java.text.SimpleDateFormat;
 
public class MyFileRenamePolicy  implements com.oreilly.servlet.multipart.FileRenamePolicy {
	
     public File rename(File f) {
    	 
          long currentTime = System.currentTimeMillis();
          SimpleDateFormat simDf = new SimpleDateFormat("HHMMmmyyyyssdd");
          Random r = new Random();
          String uniqueFileName = String.format("%04d%s", r.nextInt(1000), simDf.format(new Date(currentTime)));
 
          String name = f.getName();
          //String body = null;
          String ext = null;
 
          int dot = name.lastIndexOf(".");
          if (dot != -1) {
               //body = name.substring(0, dot);
               ext = name.substring(dot);  // includes "."
          }
          else {
               //body = name;
               ext = "";
          }
     
          String tempName = uniqueFileName + ext;
          f = new File(f.getParent(), tempName);
          if (createNewFile(f)) {
               return f;
          }
 
          int count = 0;
          while (!createNewFile(f) && count < 9999) {
               count++;
               String newName = uniqueFileName + "_" + count + ext;
               f = new File(f.getParent(), newName);
          }
 
          return f;
     }
 
     private boolean createNewFile(File f) {
          try {
               return f.createNewFile();
          }
          catch (IOException ignored) {
               return false;
          }
     }
}















---------------------------------------
//adminbooklist.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>	
<%-- Servlet MVC Pattern 에서 JSP 페이지 작성시 뷰 역할만 하기 때문에 액션 관련 코드는 모두 제거한다 --%>
<%-- 현재 페이지(*.jsp)를 직접 실행하지 않는다 --%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>GuestBook v2.0</title>
<meta name="viewport" content="width=device-width, initial-scale=1">

<link rel="stylesheet"
	href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
	
<!-- 외부 스크립트 파일 연결 -> 주의) 연결 순서 중요 -->
<script src="${pageContext.request.contextPath}/script/util.js"></script>

<script src="http://maps.googleapis.com/maps/api/js"></script>

<script
	src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script
	src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>

<style>

div.panel {
	box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0
		rgba(0, 0, 0, 0.19);
}

</style>
<script>
	$(document).ready(function() {

		//------------------------------------
		//남은 날짜 표시
		$("#day").text("(D-" + remainderOfDays("2017-10-27") + ")");
		//------------------------------------

		
		//------------------------------------
		//검색 진행후 검색 key, value를 유지하는 과정 추가
		var key = "${key}";
		var value = "${value}";
		$("select#key > option[value='"+key+"']").attr("selected", "selected");
		$("input#value").val(value);
		//------------------------------------
		
		
		//------------------------------------
		//블라인드 버튼 클릭시 폼 전송 과정 추가
		$("#boardTable .btnON").on("click", function() {
			$("#blindform #blind").val("1");
			$("#blindform #gid").val($(this).val());
			$("#blindform").submit();
		});
		$("#boardTable .btnOFF").on("click", function() {
			$("#blindform #blind").val("0");
			$("#blindform #gid").val($(this).val());
			$("#blindform").submit();
		});
		//------------------------------------
		

	}); //ready 이벤트
</script>


</head>
<body>

	<div class="container">
	
		<div>
			<h1 style="font-size: x-large;">
				<!-- 로고 이미지를 클릭하면 HOME 화면으로 이동하도록 설정 -->
				<a href="${pageContext.request.contextPath}/adminbooklist.do"><img src="${pageContext.request.contextPath}/img/sist_logo.png" alt="sist_logo.png" style="vertical-align: bottom;"></a> 방명록 관리자 <small>[v2.0 MVC Pattern] Java&amp;Python개발자
					과정 2017.03.31 ~ 2017.10.27 <span style="color: red;" id="day">(D-0)</span>
				</small>
			</h1>
		</div>

		<div class="panel-group">
		
			<nav class="navbar navbar-default" style="box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);">
				<div class="container-fluid">
					<ul class="nav navbar-nav">
						<li class="active"><a href="${pageContext.request.contextPath}/adminbooklist.do">방명록 관리</a></li>
						<li><a href="${pageContext.request.contextPath}/adminpicturelist.do">사진 관리</a></li>
						<li><a href="${pageContext.request.contextPath}/logout.do">로그아웃</a></li>
					</ul>
				</div>
			</nav>

			<div class="panel panel-default">
				<div class="panel-heading">방명록</div>
				<div class="panel-body">
					<table class="table" id="boardTable">
						<thead>
							<tr>
								<th>번호</th>
								<th>글쓴이</th>
								<th>글내용</th>
								<th>작성일</th>
								<th>ClientIP</th>
								<th>Blind</th>
							</tr>
						</thead>
						<tbody>
							<!-- 
							<tr>
								<td>1</td>
								<td>관리자</td>
								<td>JSP 과정 진행 중입니다. 프로젝트 발표 사진도 올릴 예정입니다.</td>
								<td>2017-08-17</td>
								<td>211.63.89.68</td>
								<td><div class="btn-group"> <button type="button" class="btn btn-xs btn-default">On</button> <button type="button" class="btn btn-xs btn-default">Off</button> </div></td>
							</tr>
							 -->
							 
							<%-- 블라인드 처리된 게시물 확인을 위한 임시변수 선언 --%>
							<c:set var="blindcount" value="0" />
							
							<c:forEach var="g" items="${guestbooks}">
							<tr ${(g.blind==1)?"style=\"background-color:#f5f5f5\"":""}>
								<td>${g.gid}</td>
								<td>${g.name_}</td>
								<td>${g.content_}</td>
								<td>${g.regDate}</td>
								<td>${g.clientIP}</td>
								<td>
								
								<%-- 블라인드 처리 버튼 추가 --%>								
								<div class="btn-group"> <button type="button" class="btn btn-xs btn-default btnON  ${(g.blind==1)?'active':''}" value="${g.gid}">On</button> <button type="button" class="btn btn-xs btn-default  btnOFF ${(g.blind==0)?'active':''}" value="${g.gid}">Off</button> </div>
								
								</td>
								
								<%-- 블라인드 처리된 게시물인 경우만 임시변수의 값을 1 증가 --%>
								<c:if test="${g.blind==1}">
									<c:set var="blindcount" value="${blindcount+1}" />
								</c:if>
								
							</tr>
							</c:forEach>
							 
						</tbody>
					</table>

					<!-- action="" 속성이 없는 경우 자기 자신에게 전송된다. -->
					<form method="post" class="form-inline">

						<div class="form-group">
							<button type="button" class="btn btn-default btn-sm">
								TotalCount <span class="badge" id="totalCount">${totalcount}</span>							</button>
						</div>


						<div class="form-group">
							<button type="button" class="btn btn-default btn-sm">
								Count <span class="badge" id="count">${count}</span>
							</button>
						</div>

						<div class="form-group">
							<button type="button" class="btn btn-default btn-sm">
								BlindCount <span class="badge" id="blindcount">${blindcount}</span>
							</button>
						</div>

						<div class="form-group">
							<select class="form-control" name="key" id="key">
								<option value="name_">글쓴이</option>
								<option value="content_">글내용</option>
								<option value="regDate">작성일</option>
								<option value="name_content_">글쓴이+글내용</option>
							</select>
						</div>

						<div class="form-group">
							<input type="text" class="form-control" id="value" name="value">
						</div>

						<button type="submit" class="btn btn-default">Search</button>

					</form>

				</div>
			</div>
		</div>

	</div>
	
	<%-- 블라인드 처리를 위한 전용 폼 --%>
	<form action="${pageContext.request.contextPath}/adminbookblind.do" method="get" id="blindform">
		<input type="hidden" name="blind" id="blind" value="">	
		<input type="hidden" name="gid" id="gid" value="">
		<!-- 주의) 서브밋 버튼이 없다 -->	
		<!-- <button type="submit" class="btn btn-default">Submit</button> -->
	</form>

</body>
</html>











------------------------------------
//adminpicturefail.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8" trimDirectiveWhitespaces="true"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>GuestBook v2.0</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet"
	href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<script
	src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script
	src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

</head>
<body>
	<div class="container">

		<div class="modal-dialog">

			<div>
				<h1 style="font-size: x-large;">
					<img src="${pageContext.request.contextPath}/img/sist_logo.png" alt="logo"
						style="vertical-align: bottom;"> 방명록 <small>v2.0 MVC Patterns</small>
				</h1>
			</div>

			<!-- Modal content-->
			<div class="modal-content">
				<div class="modal-header" style="padding: 35px 50px;">
					<h4>
						<span class="glyphicon glyphicon-lock"></span> 파일 업로드
					</h4>
					<label>파일업로드가 실패했습니다.</label>
				</div>
				<div class="modal-body" style="padding: 40px 50px;">
					<div class="form-group"></div>
					<a href="${pageContext.request.contextPath}/adminpicturelist.do" class="btn btn-default btn-block">Main</a>
				</div>
				<div class="modal-footer"></div>
			</div>

		</div>

	</div>
</body>
</html>














------------------------------------
//adminpicturelist.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8" trimDirectiveWhitespaces="true"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">

<title>GuestBook v2.0</title>
<meta name="viewport" content="width=device-width, initial-scale=1">

<link rel="stylesheet"
	href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">

<!-- 외부 스크립트 파일 연결 -> 주의) 연결 순서 중요 -->
<script src="${pageContext.request.contextPath}/script/util.js"></script>

<script src="http://maps.googleapis.com/maps/api/js"></script>

<script
	src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script
	src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>

<style>
div.panel {
	box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0
		rgba(0, 0, 0, 0.19);
}
</style>
<script>
	$(document).ready(function() {

		//남은 날짜 표시
		$("#day").text("(D-" + remainderOfDays("2017-10-27") + ")");
		
		
		//사진 삭제를 위한 모달창 호출 과정 추가
		$(".btnPictureDelete").on("click", function() {
			
			//문제) 선택된 버튼이 속한 <div> 태그에 대해서 배경색 지정
			$(this).parents("div.thumbnail").css("background-color", "#F5F5F5");
			//문제) hidden 폼에 pid, pic_filename 정보를 value 속성에 채우는 과정
			$("#deleteFormModal input#pid").val($(this).val());
			$("#deleteFormModal input#pic_filename").val($(this).parents("div.thumbnail").find("img").attr("alt"));
	
			$("#deleteFormModal").modal();
		});
		
		$("#deleteFormModal").on('hidden.bs.modal', function () {
	        $("div.thumbnail").css("background-color", "");
		});

	}); //ready 이벤트
</script>


</head>
<body>

	<div class="container">

		<div>
			<h1 style="font-size: x-large;">
				<!-- 로고 이미지를 클릭하면 HOME 화면으로 이동하도록 설정 -->
				<a href="${pageContext.request.contextPath}/adminpicturelist.do"><img
					src="${pageContext.request.contextPath}/img/sist_logo.png" alt="sist_logo.png"
					style="vertical-align: bottom;"></a> 방명록 관리자 <small>[v2.0
					MVC Pattern] Java&amp;Python개발자 과정 2017.03.31 ~ 2017.10.27 <span
					style="color: red;" id="day">(D-0)</span>
				</small>
			</h1>
		</div>

		<div class="panel-group">

			<nav class="navbar navbar-default"
				style="box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);">
				<div class="container-fluid">
					<ul class="nav navbar-nav">
						<li><a href="${pageContext.request.contextPath}/adminbooklist.do">방명록 관리</a></li>
						<li class="active"><a
							href="${pageContext.request.contextPath}/adminpicturelist.do">사진 관리</a></li>
						<li><a href="${pageContext.request.contextPath}/logout.do">로그아웃</a></li>
					</ul>
				</div>
			</nav>

			<div class="panel panel-default">
				<div class="panel-heading">사진 업로드</div>
				<div class="panel-body" id="demo">

					<form role="form" action="${pageContext.request.contextPath}/adminpictureinsert.do"
						method="post" enctype="multipart/form-data">
						<div class="form-group">
							<input type="text" class="form-control" id="caption_"
								name="caption_" placeholder="사진 설명 (50자 이내)" maxlength="50"
								required="required">
						</div>
						<div class="form-group">
							<input type="file" class="form-control" id="pic_filename"
								name="pic_filename" required="required"> <span
								class="help-block">(only .jpg or .png, 1M byte 이내)</span>
						</div>
						<button type="submit" class="btn btn-default">Submit</button>
					</form>

				</div>
			</div>


			<div class="panel panel-default">
				<div class="panel-heading">사진 목록</div>

				<div class="panel-body">
				
				
				<%-- 

					<div class="row">
						<div class="col-md-3">
							<div class="thumbnail">
								<a href="${pageContext.request.contextPath}/picture/chicago.jpg" target="_blank">
									<img src="${pageContext.request.contextPath}/picture/chicago.jpg" alt="chicago.jpg"
									style="width: 100%">
									<div class="caption">
										<p>시카고 공연</p>
									</div>
								</a>
							</div>
						</div>

						<div class="col-md-3">
							<div class="thumbnail">
								<a href="${pageContext.request.contextPath}/picture/la.jpg" target="_blank"> <img
									src="${pageContext.request.contextPath}/picture/la.jpg" alt="la.jpg"
									style="width: 100%">
									<div class="caption">
										<p>LA 공연</p>
									</div>
								</a>
							</div>
						</div>

						<div class="col-md-3">
							<div class="thumbnail">
								<a href="${pageContext.request.contextPath}/picture/ny.jpg" target="_blank"> <img
									src="${pageContext.request.contextPath}/picture/ny.jpg" alt="ny.jpg"
									style="width: 100%">
									<div class="caption">
										<p>뉴욕 공연</p>
									</div>
								</a>
							</div>
						</div>

						<div class="col-md-3">
							<div class="thumbnail">
								<a href="${pageContext.request.contextPath}/picture/ny.jpg" target="_blank"> <img
									src="${pageContext.request.contextPath}/picture/ny.jpg" alt="ny.jpg"
									style="width: 100%">
									<div class="caption">
										<p>테스트1</p>
									</div>
								</a>
							</div>
						</div>

					</div>
					<hr>
					<div class="row">
						<div class="col-md-3">
							<div class="thumbnail">
								<a href="${pageContext.request.contextPath}/picture/ny.jpg" target="_blank"> <img
									src="${pageContext.request.contextPath}/picture/ny.jpg" alt="ny.jpg"
									style="width: 100%">
									<div class="caption">
										<p>테스트2</p>
									</div>
								</a>
							</div>
						</div>

					</div>
				--%>
				
				<div class="row">
				<%-- 사진 출력을 위한 반복문 지정 --%>
				<c:forEach var="p" items="${picturelist}" varStatus="c">
				
						<%-- 썸네일 형태의 사진 출력을 위한 부트스트랩 설정 --%>
						<div class="col-md-3">
							<div class="thumbnail">
								<a href="${pageContext.request.contextPath}/picture/${p.pic_filename}" target="_blank"> <img
									src="${pageContext.request.contextPath}/picture/${p.pic_filename}" alt="${p.pic_filename}"
									style="width: 100%">
								</a>
								<div class="caption">
									<p>${p.caption_}</p>
									
									<%-- 사진 삭제를 위한 버튼 추가 --%>
									<button type="button" class="btn btn-default btn-sm btnPictureDelete" value="${p.pid}">삭제</button>
									
								</div>
							</div>
						</div>
						
				<%-- 사진 4장당 DIV 영역 분리하는 부분 추가 --%>
				<c:if test="${c.count % 4 == 0}">
					</div>
					<hr>
					<div class="row">
				</c:if>						

				</c:forEach>
				</div>
					
				</div>
					
			</div>

		</div>

	</div>
	
	
	<!-- Delete Form Modal -->
	<div id="deleteFormModal" class="modal fade" role="dialog">
		<div class="modal-dialog">

			<!-- Modal content-->
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal">&times;</button>
					<h4 class="modal-title">Delete</h4>
				</div>
				<div class="modal-body">

					<div class="form-group">
						선택한 사진을 삭제할까요?
					</div>
						
					<%-- 사진 삭제를 위한 hidden 폼 추가 --%>
					<form action="${pageContext.request.contextPath}/adminpicturedelete.do" method="get" id="blindform">
						<input type="hidden" name="pic_filename" id="pic_filename" value="">	
						<input type="hidden" name="pid" id="pid" value="">
						<button type="submit" class="btn btn-default">확인</button>
					</form>

				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default btn-sm"
						data-dismiss="modal">Close</button>
				</div>
			</div>

		</div>
	</div>
	


</body>
</html>














------------------------------------------
//guestbooklist.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>	
<%-- Servlet MVC Pattern 에서 JSP 페이지 작성시 뷰 역할만 하기 때문에 액션 관련 코드는 모두 제거한다 --%>
<%-- 현재 페이지(*.jsp)를 직접 실행하지 않는다 --%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>GuestBook v2.0</title>

<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet"
	href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">

<!-- 외부 스크립트 파일 연결 -> 주의) 연결 순서 중요 -->
<script src="${pageContext.request.contextPath}/script/util.js"></script>

<script src="http://maps.googleapis.com/maps/api/js"></script>

<script
	src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script
	src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>

<style>

div.panel {
	box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0
		rgba(0, 0, 0, 0.19);
}

</style>

<script>
$(document).ready(function() {
	
	//------------------------------------
	//구글 맵 버튼에 대한 이벤트 등록
	$(".btnMap").click(function() {
		//모달 창 호출 액션
		$("#mapModal").modal();
	});
	//모달 창이 화면에 나타나면 myMap() 함수 호출
	$("#mapModal").on('shown.bs.modal', function() {
		myMap();
	});
	//모달 창이 화면에서 사라질때 기존의 영역에 출력된 지도 정보 삭제
	$("#mapModal").on('hidden.bs.modal', function() {
		$("#googleMap").empty();
	});
	//------------------------------------


	//------------------------------------
	//남은 날짜 표시
	$("#day").text("(D-" + remainderOfDays("2017-10-27") + ")");
	//------------------------------------

	
	//------------------------------------
	//글쓰기 성공(100), 실패 메시지(101) 반환
	if ("${code}" == "100") {
		$(".insert-success").css("display", "inline");
	} else if ("${code}" == "101") {
		$(".insert-fail").css("display", "inline");
	} 
	//------------------------------------

	
	//------------------------------------
	//검색 진행후 검색 key, value를 유지하는 과정 추가
	var key = "${key}";
	var value = "${value}";
	$("select#key > option[value='"+key+"']").attr("selected", "selected");
	$("input#value").val(value);
	//------------------------------------
	
	
	//------------------------------------
	//삭제 기능 추가를 위한 버튼 이벤트 등록
	$(".btnDelete").on("click", function() {
		
		//삭제 버튼 클릭시 버튼이 속한 <tr> 태그에 배경색 지정
		$(this).parents("tr").css("background-color", "#F5F5F5");
		
		//삭제 버튼 클릭시 특정 hidden 태그에 글번호 지정
		$("input#gid").val($(this).val());
		
	});
	//------------------------------------


	//------------------------------------
	//패스워드 입력 폼 팝업이 닫히는 경우 배경색 지정 취소
	$("#deleteFormModal").on('hidden.bs.modal', function () {
        $("table#boardTable tr").css("background-color", "");
	});
	//------------------------------------
	
	
	//------------------------------------
	//글삭제 성공(200), 실패 메시지(201) 반환
	if ("${code}" == "200") {
		$(".delete-success").css("display", "inline");
	} else if ("${code}" == "201") {
		$(".delete-fail").css("display", "inline");
	} 
	//------------------------------------

	
	
});
</script>


<script>

	var position01 = new google.maps.LatLng(37.500197, 127.033471);
	var position02 = new google.maps.LatLng(37.499362, 127.033202);

	function myMap() {

		//구글 맵 정보 설정
		var mapProp = {
			center : position01,
			zoom : 17,
			mapTypeId : google.maps.MapTypeId.ROADMAP
		};
		var map = new google.maps.Map(document.getElementById("googleMap"),
				mapProp);

		//마커 정보 설정
		var marker = new google.maps.Marker({
			position : position02,
		});
		marker.setMap(map);

		//윈포윈도우 설정
		var infowindow = new google.maps.InfoWindow(
				{
					content : "한독약품빌딩<br>서울특별시 강남구 역삼1동 735<br><img src=\"${pageContext.request.contextPath}/img/handok_small.png\">"
				});
		google.maps.event.addListener(marker, 'click', function() {
			infowindow.open(map, marker);
		});

	}
</script>



</head>
<body>

	<div class="container">

		<div>
			<h1 style="font-size: x-large;">
				<!-- 로고 이미지를 클릭하면 HOME 화면으로 이동하도록 설정 -->
				<a href="${pageContext.request.contextPath}/guestbooklist.do"><img src="${pageContext.request.contextPath}/img/sist_logo.png" alt="sist_logo.png" style="vertical-align: bottom;"></a> 방명록 <small>[v2.0 MVC Pattern] Java&amp;Python개발자
					과정 2017.03.31 ~ 2017.10.27 <span style="color: red;" id="day">(D-0)</span>
				</small>
			</h1>
		</div>

		<div class="panel-group">
			<div class="panel panel-default">
				<div class="panel-heading">
					서울특별시 강남구 역삼1동 735 한독약품빌딩 8층 쌍용교육센터 2강의실, 지하철 2호선 역삼역 3번 출구
					<button type="button" class="btn btn-default btn-xs btnMap"
						id="map">Map</button>
					<button type="button" class="btn btn-default btn-xs" id="admin" data-toggle="modal" data-target="#loginFormModal">Admin</button>
				</div>
			</div>

			<div class="panel panel-default">
				<div class="panel-heading">Picture List</div>
				<div class="panel-body">

					<!-- data-ride="carousel" 속성 지정시 슬라이드가 자동 시작된다. -->
					<div id="myCarousel" class="carousel slide" >

						<ol class="carousel-indicators">
							
							<!-- 
							<li data-target="#myCarousel" data-slide-to="0" class="active"></li>
							<li data-target="#myCarousel" data-slide-to="1"></li>
							<li data-target="#myCarousel" data-slide-to="2"></li>
							 -->
							 
							 
							<%-- varStatus="" 속성은 forEach 실행시 인덱스를 확인할 때 사용 --%>
							<%-- carousel-indicators 지정시 data-slide-to="0"인 경우 class="active" 속성이 추가되어야 한다. --%>
							<c:forEach var="a" items="${picturelist}" varStatus="b">
							<li data-target="#myCarousel" data-slide-to="${b.index}"  ${(b.index == 0)?"class=\"active\"":""}  ></li>
							</c:forEach>
							
							
						</ol>

						<!-- Wrapper for slides -->
						<div class="carousel-inner" role="listbox">
							
							<%-- 
							<div class="item active">
								<img src="${pageContext.request.contextPath}/picture/chicago.jpg"
									alt="chicago.jpg" style="width:100%;">
									
								<!-- 간단한 사진 설명을 캡션으로 추가 가능 -->	
								<div class="carousel-caption">
									<h3>시카고 공연</h3>
								</div>

							</div>

							<div class="item">
								<img src="${pageContext.request.contextPath}/picture/la.jpg" alt="la.jpg" style="width:100%;">
								<div class="carousel-caption">
									<h3>LA 공연</h3>
								</div>
							</div>

							<div class="item">
								<img src="${pageContext.request.contextPath}/picture/ny.jpg" alt="ny.jpg" style="width:100%;">
								<div class="carousel-caption">
									<h3>뉴욕 공연</h3>
								</div>
							</div>
 							--%>
 							
 							
							<%-- varStatus="" 속성은 forEach 실행시 인덱스를 확인할 때 사용 --%>
 							<c:forEach var="a" items="${picturelist}" varStatus="b">
 							<%-- carousel-inner 지정시 첫 번째 <div> 태그에 class="active" 속성이 지정되어야 한다. --%>
 							<div class="item  ${(b.index == 0)?'active':''} ">
								<img src="${pageContext.request.contextPath}/picture/${a.pic_filename}" alt="${a.pic_filename}" style="width:100%;">
								<div class="carousel-caption">
									<h3>${a.caption_}</h3>
								</div>
							</div>
 							</c:forEach>
 							
						</div>

						<!-- Left and right controls -->
						<a class="left carousel-control" href="#myCarousel" role="button"
							data-slide="prev"> <span
							class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
							<span class="sr-only">Previous</span>
						</a> <a class="right carousel-control" href="#myCarousel"
							role="button" data-slide="next"> <span
							class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
							<span class="sr-only">Next</span>
						</a>
					</div>


					<p>Note: Carousels are not supported properly in Internet
						Explorer 9 and earlier.</p>



				</div>
			</div>

			<div class="panel panel-default">
				<div class="panel-heading">방명록 글쓰기</div>
				<div class="panel-body" id="demo">

					<form role="form" action="${pageContext.request.contextPath}/guestbookinsert.do" method="post">
						<div class="form-group">
							<input type="text" class="form-control" id="name_" name="name_"
								placeholder="NAME (20자 이내)" maxlength="20" required="required">
						</div>
						<div class="form-group">
							<input type="password" class="form-control" id="pw" name="pw"
								placeholder="PASSWORD (20자 이내)" maxlength="20"
								required="required">
						</div>
						<div class="form-group">
							<input type="text" class="form-control" id="content_"
								name="content_" placeholder="CONTENT (500자 이내)" maxlength="500"
								required="required">
						</div>
						<button type="submit" class="btn btn-default">Submit</button>
						<span class="alert alert-success insert-success"
							style="padding: 8px; display: none;"> <strong>Success!</strong>
							방명록 글쓰기가 성공했습니다.
						</span> <span class="alert alert-danger insert-fail"
							style="padding: 8px; display: none;"> <strong>Fail!</strong>
							방명록 글쓰기가 실패했습니다.
						</span>
					</form>

				</div>
			</div>
			<div class="panel panel-default">
				<div class="panel-heading">방명록 글목록</div>
				<div class="panel-body">

					<table class="table" id="boardTable">
						<thead>
							<tr>
								<th>번호</th>
								<th>글쓴이</th>
								<th>글내용</th>
								<th>작성일</th>
								<th>삭제</th>
							</tr>
						</thead>
						<tbody>
							<!-- 
							<tr>
								<td>1</td>
								<td>관리자</td>
								<td>JSP 과정 진행 중입니다. 프로젝트 발표 사진도 올릴 예정입니다.</td>
								<td>2017-08-17</td>
								<td><button type="button" class="btn btn-default btn-xs">삭제</button></td>
							</tr>
							 -->
							<c:forEach var="g" items="${guestbooks}">
							<tr>
								<td>${g.gid}</td>
								<td>${g.name_}</td>
								<td>${g.content_}</td>
								<td>${g.regDate}</td>
								<td>
								
								<%-- 삭제 기능 추가를 위해서 식별자, 모달 팝업, 글번호 바인딩 --%>
								<button type="button" value="${g.gid}" class="btn btn-default btn-xs  btnDelete" data-toggle="modal" data-target="#deleteFormModal">삭제</button>
								
								</td>
							</tr>
							</c:forEach>
							
							
						</tbody>
					</table>

					<!-- action="" 속성 생략시 자기 자신에게 전송 -->
					<form   method="post" class="form-inline">

						<div class="form-group">
							<button type="button" class="btn btn-default btn-sm">
								TotalCount <span class="badge" id="totalCount">${totalcount}</span>
							</button>
						</div>


						<div class="form-group">
							<button type="button" class="btn btn-default btn-sm">
								Count <span class="badge" id="count">${count}</span>
							</button>
						</div>

						<div class="form-group">
							<select class="form-control" name="key" id="key">
								<option value="name_">글쓴이</option>
								<option value="content_">글내용</option>
								<option value="regDate">작성일</option>
								<option value="name_content_">글쓴이+글내용</option>
							</select>
						</div>

						<div class="form-group">
							<input type="text" class="form-control" id="value" name="value">
						</div>

						<button type="submit" class="btn btn-default">Search</button>
						
						<!-- 삭제 결과 메시지 출력 부분 추가 -->
						<span class="alert alert-success delete-success"
							style="padding: 8px; display: none;"> <strong>Success!</strong>
							방명록 글삭제가 성공했습니다.
						</span> <span class="alert alert-danger delete-fail"
							style="padding: 8px; display: none;"> <strong>Fail!</strong>
							방명록 글삭제가 실패했습니다.
						</span>
						
					</form>

				</div>
			</div>
		</div>

	</div>


	<!-- Google Map Modal -->
	<div id="mapModal" class="modal fade" role="dialog">
		<div class="modal-dialog">

			<!-- Modal content-->
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal">&times;</button>
					<h4 class="modal-title">Google Map</h4>
				</div>
				<div class="modal-body">

					<div id="googleMap"
						style="width: 550px; height: 380px; margin: auto;"></div>

				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default btn-sm"
						data-dismiss="modal">Close</button>
				</div>
			</div>

		</div>
	</div>


	<!-- Login Form Modal -->
	<div id="loginFormModal" class="modal fade" role="dialog">
		<div class="modal-dialog">

			<!-- Modal content-->
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal">&times;</button>
					<h4 class="modal-title">Admin Login</h4>
				</div>
				<div class="modal-body">

					<form action="${pageContext.request.contextPath}/login.do" method="post">

						<div class="form-group">
							<input type="text" placeholder="ID(max:20)" class="form-control"
								id="id_" name="id_" required maxlength="20">
						</div>

						<div class="form-group">
							<input type="password" placeholder="PASSWORD(max:20)"
								class="form-control" id="pw" name="pw" required maxlength="20">
						</div>

						<button type="submit" class="btn btn-default">로그인</button>

					</form>

				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default btn-sm"
						data-dismiss="modal">Close</button>
				</div>
			</div>

		</div>
	</div>

	<!-- Delete Form Modal -->
	<div id="deleteFormModal" class="modal fade" role="dialog">
		<div class="modal-dialog">

			<!-- Modal content-->
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal">&times;</button>
					<h4 class="modal-title">Delete</h4>
				</div>
				<div class="modal-body">

					<form action="${pageContext.request.contextPath}/guestbookdelete.do" method="post">
					
						<!-- 삭제 진행을 위한 글번호(PK) 지정. hidden 태그 사용. -->
						<!-- <input type="hidden" value="글번호" id="식별자" name="식별자"> -->
						<input type="hidden" value="" id="gid" name="gid">

						<div class="form-group">
							선택한 자료를 삭제할까요?
						</div>

						<div class="form-group">
							<input type="password" placeholder="PASSWORD(max:20)"
								class="form-control" id="pw" name="pw" required maxlength="20">
						</div>

						<button type="submit" class="btn btn-default">삭제</button>

					</form>

				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default btn-sm"
						data-dismiss="modal">Close</button>
				</div>
			</div>

		</div>
	</div>
</body>
</html>
















------------------------------------------
//loginfail.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8" trimDirectiveWhitespaces="true"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>GuestBook v2.0</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet"
	href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<script
	src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script
	src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

</head>
<body>
	<div class="container">

		<div class="modal-dialog">

			<div>
				<h1 style="font-size: x-large;">
					<img src="${pageContext.request.contextPath}/img/sist_logo.png" alt="logo"
						style="vertical-align: bottom;"> 방명록 <small>v2.0 MVC Patterns</small>
				</h1>
			</div>

			<!-- Modal content-->
			<div class="modal-content">
				<div class="modal-header" style="padding: 35px 50px;">
					<h4>
						<span class="glyphicon glyphicon-lock"></span> 로그인
					</h4>
					<label>로그인에 실패했습니다.</label>
				</div>
				<div class="modal-body" style="padding: 40px 50px;">
					<div class="form-group"></div>
					<a href="${pageContext.request.contextPath}/guestbooklist.do" class="btn btn-default btn-block">Main</a>
				</div>
				<div class="modal-footer"></div>
			</div>

		</div>

	</div>
</body>
</html>



















-----------------------------------
//logoutform.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8" trimDirectiveWhitespaces="true"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>GuestBook v2.0</title>

<meta name="viewport" content="width=device-width, initial-scale=1">

<link rel="stylesheet"
	href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<script
	src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script
	src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

</head>
<body>
	<div class="container">

		<div class="modal-dialog">

			<div>
				<h1 style="font-size: x-large;">
					<img src="${pageContext.request.contextPath}/img/sist_logo.png" alt="logo"
						style="vertical-align: bottom;"> 방명록 <small>v2.0 MVC Pattern</small>
				</h1>
			</div>

			<!-- Modal content-->
			<div class="modal-content">
				<div class="modal-header" style="padding: 35px 50px;">
					<h4>
						<span class="glyphicon glyphicon-lock"></span> 로그인
					</h4>
					<label>안전하게 로그아웃 되었습니다.</label>
				</div>
				<div class="modal-body" style="padding: 40px 50px;">
					<div class="form-group"></div>
					<a href="${pageContext.request.contextPath}/guestbooklist.do" class="btn btn-default btn-block">Main</a>
				</div>
				<div class="modal-footer"></div>
			</div>

		</div>

	</div>
</body>
</html>
















-------------------------------------------
//redirect.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"  trimDirectiveWhitespaces="true" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<c:url var="redirect" value="${param.url}">
	<c:param name="code" value="${param.code}" />
</c:url>
<c:redirect url="${redirect}" />






----------------------------------------------
